<Window x:Class="OneWayTwoWayBinding.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OneWayTwoWayBinding"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:Command="http://www.galasoft.ch/mvvmlight"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1024">

    <Window.Resources>
        <local:ConverterStringFiltering x:Key="ConverterStringFiltering" />
        <local:ConverterButton x:Key="ConverterButton" />
        <local:ConverterIntFiltering x:Key="ConverterIntFiltering" />

        <ControlTemplate x:Key="ErrorToolTipTemplate_1">
            <ControlTemplate.Resources>
                <Style x:Key="textblockErrorTooltip" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="FontWeight" Value="Bold" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="Margin" Value="0 0 0 0" />
                </Style>
            </ControlTemplate.Resources>
            <DockPanel LastChildFill="true">
                <Border Height="Auto"
   Margin="0,0,0,0"
   Background="#DC000C"
   CornerRadius="0"
   DockPanel.Dock="Bottom">
                    <ItemsControl ItemsSource="{Binding}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Style="{StaticResource textblockErrorTooltip}" 
Text="{Binding ErrorContent}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>
                <AdornedElementPlaceholder Name="customAdorner">
                    <Border BorderBrush="#DC000C" BorderThickness="1.3" />
                </AdornedElementPlaceholder>
            </DockPanel>
        </ControlTemplate>

        <Style TargetType="TextBox">
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Width" Value="150" />
            <Setter Property="Height" Value="30" />
            <Setter Property="Validation.ErrorTemplate" 
                 Value="{DynamicResource ErrorToolTipTemplate_1}" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" 
Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <ListView Name="EmployeeListView" HorizontalAlignment="Left" Height="160" Margin="0,153,0,0" VerticalAlignment="Top" Width="755" Grid.Row="1" SelectedIndex="{Binding SelectedIndex}" ItemsSource="{Binding FilteredCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedEmployee, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  IsSynchronizedWithCurrentItem="True" SelectionMode="Extended" AllowDrop="True"
            dd:DragDrop.IsDragSource="true"
            dd:DragDrop.IsDropTarget="true"
            dd:DragDrop.ShowAlwaysDropTargetAdorner="true"
            dd:DragDrop.UseDefaultDragAdorner="true"
            dd:DragDrop.SelectDroppedItems="True"
            dd:DragDrop.DropHandler="{Binding}"
            dd:DragDrop.DragDropCopyKeyState ="AltKey"
            
         >
            <ListView.View>
                <GridView>
                    <GridViewColumn DisplayMemberBinding="{Binding EmployeeName}"  Width="150">
                        <GridViewColumnHeader  Content="EmployeeName" 
                              Command="{Binding SortCommand}" 
                              CommandParameter="EmployeeName" />
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding EmployeeID}"  Width="150">
                        <GridViewColumnHeader  Content="EmployeeID" 
                              Command="{Binding SortCommand}" 
                              CommandParameter="EmployeeID" />
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding EmployeeSalary}"  Width="150">
                        <GridViewColumnHeader  Content="EmployeeSalary" 
                              Command="{Binding SortCommand}" 
                              CommandParameter="EmployeeSalary" />
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding EmployeeDesigner}"  Width="150">
                        <GridViewColumnHeader  Content="EmployeeDesigner" 
                              Command="{Binding SortCommand}" 
                              CommandParameter="EmployeeDesigner" />
                    </GridViewColumn>
                    <GridViewColumn DisplayMemberBinding="{Binding EmployeeEmailID}"  Width="150">
                        <GridViewColumnHeader  Content="EmployeeEmailID" 
                              Command="{Binding SortCommand}" 
                              CommandParameter="EmployeeEmailID" />
                    </GridViewColumn>


                    <!--<GridViewColumn Header="EmployeeName" Width="150" DisplayMemberBinding="{Binding EmployeeName}" />
                    <GridViewColumn Header="EmployeeID" Width="150" DisplayMemberBinding="{Binding EmployeeID}" />
                    <GridViewColumn Header="EmployeeSalary" Width="150" DisplayMemberBinding="{Binding EmployeeSalary}" />
                    <GridViewColumn Header="EmployeeDesigner" Width="150" DisplayMemberBinding="{Binding EmployeeDesigner}" />
                    <GridViewColumn Header="EmployeeEmailID" Width="150" DisplayMemberBinding="{Binding EmployeeEmailID}" />-->
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="IsSelected" Value="{Binding Mode=TwoWay, Path=IsSelected, UpdateSourceTrigger=PropertyChanged}"/>
                    <!--<EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListViewItem_PreviewMouseLeftButtonDown"/>-->

                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="BorderThickness" Value="0"/>


                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Green"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGreen"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Background" Value="DarkGreen"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </ListView.ItemContainerStyle>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChanged}" CommandParameter="{Binding ElementName=EmployeeListView, Path=SelectedItems}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding ClickCommand}" CommandParameter="{Binding ElementName=EmployeeListView, Path=SelectedItems}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="Drop">
                    <Command:EventToCommand  Command="{Binding DropCommand}" PassEventArgsToCommand="True"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--<i:Interaction.Behaviors>
                <local:ListViewSelection LastSelected = "{Binding SelectedEmployee, Mode=OneWayToSource}" />
            </i:Interaction.Behaviors>-->
        </ListView>
        <Label Content="Employee Name" HorizontalAlignment="Left" Margin="4,82,0,0" VerticalAlignment="Top" Width="151" Height="23"/>

        <TextBox Name ="TextboxEmployeeName" HorizontalAlignment="Left" Height="23" Margin="169,82,0,0" VerticalAlignment="Top" Width="522" >
            <TextBox.Text>
                <MultiBinding Converter="{StaticResource ConverterStringFiltering}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >

                    <Binding Path="SelectedEmployee.EmployeeName" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"  />
                    <Binding Path="DynamicSearchEmployeeName"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" />
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <Label Content="EmployeeID" HorizontalAlignment="Left" Margin="5,138,0,0" VerticalAlignment="Top" Width="145" Height="23"/>

        <TextBox Name ="TextboxEmployeeID" HorizontalAlignment="Left" Height="23" Margin="170,138,0,0"  VerticalAlignment="Top" Width="522" IsEnabled="{Binding TextboxActive}" >
            <TextBox.Text>
                <MultiBinding Converter="{StaticResource ConverterStringFiltering}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <!--<MultiBinding.ValidationRules>
                        <local:OnlyIntOrNullRule/>
                    </MultiBinding.ValidationRules>-->
                    <Binding Path="SelectedEmployee.EmployeeID" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                    <Binding Path="DynamicSearchEmployeeID"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"/>
                </MultiBinding>
            </TextBox.Text>
            <Validation.ErrorTemplate>
                <ControlTemplate>
                    <ControlTemplate.Resources>
                        <Style x:Key="textblockErrorTooltip" TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Margin" Value="0 0 0 0" />
                        </Style>
                    </ControlTemplate.Resources>
                    <DockPanel LastChildFill="true">
                        <Border Height="Auto"
   Margin="0,0,0,0"
   Background="#007ADC"
   CornerRadius="0"
   DockPanel.Dock="Bottom">
                            <ItemsControl ItemsSource="{Binding}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Style="{StaticResource textblockErrorTooltip}" 
Text="{Binding ErrorContent}" />
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Border>
                        <AdornedElementPlaceholder Name="customAdorner">
                            <Border BorderBrush="#007ADC" BorderThickness="1.3" />
                        </AdornedElementPlaceholder>
                    </DockPanel>
                </ControlTemplate>
            </Validation.ErrorTemplate>
        </TextBox>

        <Label Content="EmpoyeeSalary" HorizontalAlignment="Left" Margin="4,192,0,0" VerticalAlignment="Top" Width="151" Height="23"/>

        <TextBox Name="TextboxEmployeeSalary" HorizontalAlignment="Left" Height="23" Margin="169,192,0,0" VerticalAlignment="Top" Width="522" >
            <TextBox.Text>
                <MultiBinding Converter="{StaticResource ConverterStringFiltering}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <!--<MultiBinding.ValidationRules>
                        <local:OnlyIntOrNullRule/>
                    </MultiBinding.ValidationRules>-->
                    <Binding Path="SelectedEmployee.EmployeeSalary" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                    <Binding Path="DynamicSearchEmployeeSalary"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"/>
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <Label Content="EmployeeDesigner" HorizontalAlignment="Left" Margin="4,54,0,0" VerticalAlignment="Top" Width="151" Height="23" Grid.Row="1"/>

        <TextBox Name ="TextboxEmployeeDesigner" HorizontalAlignment="Left" Height="23" Margin="169,54,0,0" VerticalAlignment="Top" Width="522" Grid.Row="1" >
            <TextBox.Text>
                <MultiBinding Converter="{StaticResource ConverterStringFiltering}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding Path="SelectedEmployee.EmployeeDesigner" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                    <Binding Path="DynamicSearchEmployeeDesigner"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True"/>
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <Label Content="EmployeeEmailID" HorizontalAlignment="Left" Margin="4,107,0,0" VerticalAlignment="Top" Width="151" Height="23" Grid.Row="1"/>
        <TextBox Name="TextboxEmployeeEmailID" HorizontalAlignment="Left" Height="23" Margin="169,107,0,0" VerticalAlignment="Top" Width="522" Grid.Row="1" >

            <TextBox.Text>
                <MultiBinding Converter="{StaticResource ConverterStringFiltering}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                    <Binding Path="SelectedEmployee.EmployeeEmailID" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" />
                    <Binding Path="DynamicSearchEmployeeEmailID"  Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                </MultiBinding>
            </TextBox.Text>
        </TextBox>

        <Button Content="Update" HorizontalAlignment="Left" Margin="692,76,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.017,0.456" Command="{Binding UpdateCommand}" >
            <Button.CommandParameter>
                <MultiBinding Converter="{StaticResource ConverterButton}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding ElementName="TextboxEmployeeName" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeID" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeSalary" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeDesigner" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeEmailID" Path="Text"/>
                </MultiBinding>
            </Button.CommandParameter>
        </Button>
        <TextBlock HorizontalAlignment="Left" Margin="10,10,0,0" TextWrapping="Wrap" Text="{Binding ModeOfExecuting, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Top" Width="390" Height="37" FontSize="20"/>
        <Button Content="Clear" HorizontalAlignment="Left" Margin="692,116,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.017,0.456" Command="{Binding ClearCommand}" >
            <!--<Button.CommandParameter>
                <MultiBinding Converter="{StaticResource ConverterButton}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding ElementName="TextboxEmployeeName" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeID" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeSalary" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeDesigner" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeEmailID" Path="Text"/>
                </MultiBinding>
            </Button.CommandParameter>-->
        </Button>
        <Button Content="Add" HorizontalAlignment="Left" Margin="692,161,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.017,0.456" Command="{Binding AddCommand}" >
            <Button.CommandParameter>
                <MultiBinding Converter="{StaticResource ConverterButton}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding ElementName="TextboxEmployeeName" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeID" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeSalary" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeDesigner" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeEmailID" Path="Text"/>
                </MultiBinding>
            </Button.CommandParameter>
        </Button>
        <Button Content="Remove" HorizontalAlignment="Left" Margin="692,206,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.017,0.456"  Command="{Binding RemoveCommand}" CommandParameter="{Binding ElementName=EmployeeListView, Path=SelectedItems}">

            <!--<Button.CommandParameter>
                <MultiBinding Converter="{StaticResource ConverterButton}" UpdateSourceTrigger="PropertyChanged" Mode="TwoWay">
                    <Binding ElementName="TextboxEmployeeName" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeID" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeSalary" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeDesigner" Path="Text"/>
                    <Binding ElementName="TextboxEmployeeEmailID" Path="Text"/>
                </MultiBinding>
            </Button.CommandParameter>-->
        </Button>
        <ToggleButton Content="&lt;" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="1" VerticalAlignment="Top" Width="37" IsChecked="{Binding IsPressedLess}" Command="{Binding IsLessCommand}" IsEnabled="{Binding IsLessButtonActive}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Orange"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <ToggleButton Content="=" HorizontalAlignment="Left" Margin="64,10,0,0" Grid.Row="1" VerticalAlignment="Top" Width="37" IsChecked="{Binding IsPressedEqual}"  Command="{Binding IsEqualCommand}" IsEnabled="{Binding IsEqualButtonActive}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Orange"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <ToggleButton Content=">" HorizontalAlignment="Left" Margin="118,10,0,0" Grid.Row="1" VerticalAlignment="Top" Width="37" IsChecked="{Binding IsPressedGreater}" Command="{Binding IsGreaterCommand}" IsEnabled="{Binding IsGreaterButtonActive}">
            <ToggleButton.Style>
                <Style TargetType="{x:Type ToggleButton}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ToggleButton">
                                <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center"                  
                                              VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Orange"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ToggleButton.Style>
        </ToggleButton>
        <Button Content="Recover All" HorizontalAlignment="Left" Margin="692,27,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.017,0.456" Command="{Binding RecoverAllCommand}" Grid.Row="1" />
        <TextBlock HorizontalAlignment="Left" Margin="819,53,0,0" Grid.Row="1" TextWrapping="Wrap" Text="{Binding CountOfSelectedEmployees}" VerticalAlignment="Top" Width="141" Height="24" />
        <Label Content="Count of saelected items" HorizontalAlignment="Left" Margin="819,27,0,0" Grid.Row="1" VerticalAlignment="Top"/>
        <Button Content="Export" HorizontalAlignment="Left" Margin="692,72,0,0" VerticalAlignment="Top" Width="75" RenderTransformOrigin="-0.017,0.456" Command="{Binding ExportToCSVFileCommand}" Grid.Row="1" />
    </Grid>
</Window>